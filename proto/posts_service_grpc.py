# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: proto/posts_service.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import proto.posts_service_pb2


class PostServiceBase(abc.ABC):

    @abc.abstractmethod
    async def CreatePost(self, stream: 'grpclib.server.Stream[proto.posts_service_pb2.CreatePostRequest, proto.posts_service_pb2.CreatePostResponse]') -> None:
        pass

    @abc.abstractmethod
    async def GetPost(self, stream: 'grpclib.server.Stream[proto.posts_service_pb2.GetPostRequest, proto.posts_service_pb2.GetPostResponse]') -> None:
        pass

    @abc.abstractmethod
    async def Repost(self, stream: 'grpclib.server.Stream[proto.posts_service_pb2.RepostRequest, proto.posts_service_pb2.RepostResponse]') -> None:
        pass

    @abc.abstractmethod
    async def DeletePost(self, stream: 'grpclib.server.Stream[proto.posts_service_pb2.DeletePostRequest, proto.posts_service_pb2.DeletePostResponse]') -> None:
        pass

    @abc.abstractmethod
    async def GetUserPosts(self, stream: 'grpclib.server.Stream[proto.posts_service_pb2.GetUserPostsRequest, proto.posts_service_pb2.GetUserPostsResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/socialnetwork.PostService/CreatePost': grpclib.const.Handler(
                self.CreatePost,
                grpclib.const.Cardinality.UNARY_UNARY,
                proto.posts_service_pb2.CreatePostRequest,
                proto.posts_service_pb2.CreatePostResponse,
            ),
            '/socialnetwork.PostService/GetPost': grpclib.const.Handler(
                self.GetPost,
                grpclib.const.Cardinality.UNARY_UNARY,
                proto.posts_service_pb2.GetPostRequest,
                proto.posts_service_pb2.GetPostResponse,
            ),
            '/socialnetwork.PostService/Repost': grpclib.const.Handler(
                self.Repost,
                grpclib.const.Cardinality.UNARY_UNARY,
                proto.posts_service_pb2.RepostRequest,
                proto.posts_service_pb2.RepostResponse,
            ),
            '/socialnetwork.PostService/DeletePost': grpclib.const.Handler(
                self.DeletePost,
                grpclib.const.Cardinality.UNARY_UNARY,
                proto.posts_service_pb2.DeletePostRequest,
                proto.posts_service_pb2.DeletePostResponse,
            ),
            '/socialnetwork.PostService/GetUserPosts': grpclib.const.Handler(
                self.GetUserPosts,
                grpclib.const.Cardinality.UNARY_UNARY,
                proto.posts_service_pb2.GetUserPostsRequest,
                proto.posts_service_pb2.GetUserPostsResponse,
            ),
        }


class PostServiceStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.CreatePost = grpclib.client.UnaryUnaryMethod(
            channel,
            '/socialnetwork.PostService/CreatePost',
            proto.posts_service_pb2.CreatePostRequest,
            proto.posts_service_pb2.CreatePostResponse,
        )
        self.GetPost = grpclib.client.UnaryUnaryMethod(
            channel,
            '/socialnetwork.PostService/GetPost',
            proto.posts_service_pb2.GetPostRequest,
            proto.posts_service_pb2.GetPostResponse,
        )
        self.Repost = grpclib.client.UnaryUnaryMethod(
            channel,
            '/socialnetwork.PostService/Repost',
            proto.posts_service_pb2.RepostRequest,
            proto.posts_service_pb2.RepostResponse,
        )
        self.DeletePost = grpclib.client.UnaryUnaryMethod(
            channel,
            '/socialnetwork.PostService/DeletePost',
            proto.posts_service_pb2.DeletePostRequest,
            proto.posts_service_pb2.DeletePostResponse,
        )
        self.GetUserPosts = grpclib.client.UnaryUnaryMethod(
            channel,
            '/socialnetwork.PostService/GetUserPosts',
            proto.posts_service_pb2.GetUserPostsRequest,
            proto.posts_service_pb2.GetUserPostsResponse,
        )
